dremio:
  auth:
    enabled: true
    username: admin
    password: "Pa22word"
    firstName: Josh
    lastName: Yorko
    email: "email@example.com"

  masterCoordinator:
    persistence:
      storageClass: "longhorn"
      size: 8Gi
    extraStartParams: >-
      -Ddremio.tls.keyStore=/opt/dremio/tls/dremio.jks
      -Ddremio.tls.keyStorePassword=${DREMIO_TLS_KEYSTORE_PASSWORD}
    extraEnvVars:
      - name: DREMIO_TLS_KEYSTORE_PASSWORD
        valueFrom:
          secretKeyRef:
            name: dremio-keystore-password
            key: password
    initContainers:
      - name: post-install
        image: curlimages/curl:latest
        command: ["/bin/sh", "-c"]
        args:
          - |
            sleep 60
            until curl -s http://localhost:9047/api/v3/server_status | grep -q '"running":true'; do
              echo "Waiting for Dremio to be ready..."
              sleep 5
            done
            response=$(curl -s -X POST "http://localhost:9047/apiv2/login" \
              -H "Content-Type: application/json" \
              -d '{"userName": "admin","password": "Pa22word"}')
            token=$(echo "$response" | jq -r '.token')
            curl -X POST "http://localhost:9047/api/v3/catalog" \
              -H "Authorization: _dremio$token" \
              -H "Content-Type: application/json" \
              -d '{
                "entityType": "source",
                "config": {
                  "nessieEndpoint": "http://nessie:19120/api/v2",
                  "nessieAuthType": "NONE",
                  "asyncEnabled": true,
                  "isCachingEnabled": true,
                  "maxCacheSpacePct": 100,
                  "credentialType": "ACCESS_KEY",
                  "awsAccessKey": "minio-admin",
                  "awsAccessSecret": "Pa22word",
                  "awsRootPath": "/warehouse",
                  "propertyList": [
                    {"name": "fs.s3a.path.style.access","value": "true"},
                    {"name": "fs.s3a.endpoint","value": "dremio-minio:9000"},
                    {"name": "dremio.s3.compat","value": "true"}
                  ],
                  "secure": false
                },
                "name": "nessie",
                "type": "NESSIE"
              }'
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi

  coordinator:
    persistence:
      storageClass: "longhorn"
      size: 8Gi
    extraStartParams: >-
      -Ddremio.tls.keyStore=/opt/dremio/tls/dremio.jks
      -Ddremio.tls.keyStorePassword=${DREMIO_TLS_KEYSTORE_PASSWORD}
    extraEnvVars:
      - name: DREMIO_TLS_KEYSTORE_PASSWORD
        valueFrom:
          secretKeyRef:
            name: dremio-keystore-password
            key: password

  executor:
    common:
      persistence:
        storageClass: "longhorn"
        size: 8Gi
      extraStartParams: >-
        -XX:+UseG1GC
        -XX:+UseGCOverheadLimit
        -XX:+ExplicitGCInvokesConcurrent
        -XX:+HeapDumpOnOutOfMemoryError
        -XX:HeapDumpPath=/opt/dremio/data/heap-dump.hprof
        -Ddremio.tls.keyStore=/opt/dremio/tls/dremio.jks
        -Ddremio.tls.keyStorePassword=${DREMIO_TLS_KEYSTORE_PASSWORD}
      extraEnvVars:
        - name: DREMIO_TLS_KEYSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dremio-keystore-password
              key: password

  service:
    type: LoadBalancer

  extraVolumes:
    - name: dremio-tls
      secret:
        secretName: dremio-tls-secret

  extraVolumeMounts:
    - name: dremio-tls
      mountPath: /opt/dremio/tls
      readOnly: true

minio:
  enabled: true
  auth:
    rootUser: "minio-admin"
    rootPassword: "Pa22word"
  defaultBuckets: "dremio,warehouse"
  provisioning:
    enabled: true
    extraCommands: 
      - "mc anonymous set download provisioning/dremio"
      - "mc anonymous set download provisioning/warehouse"
  tls:
    enabled: false
    autoGenerated: false
  service:
    type: ClusterIP
    ports:
      api: 9000
  resources:
    requests:
      memory: "6Gi"
      cpu: "2"
    limits:
      memory: "12Gi"
      cpu: "4"
  persistence:
    storageClass: "longhorn"
    size: 100Gi

zookeeper:
  enabled: true
  replicaCount: 1
  resources:
    requests:
      cpu: "1"
      memory: "3Gi"
    limits:
      cpu: "2"
      memory: "6Gi"
  persistence:
    storageClass: "longhorn"
    size: 15Gi