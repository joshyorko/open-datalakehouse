---
apiVersion: batch/v1
kind: Job
metadata:
  name: dremio-post-install
  namespace: data-lakehouse
spec:
  template:
    spec:
      initContainers:
        - name: wait-for-dremio
          image: alpine:3.14
          command: ["/bin/sh", "-c"]
          args:
            - |
              apk add --no-cache curl && \
              until curl -sSf "http://dremio:9047" > /dev/null; do
                echo "Waiting for Dremio to be ready...";
                sleep 5;
              done
      containers:
        - name: dremio-post-install
          image: alpine:3.14
          command: ["/bin/sh", "-c"]
          args:
            - |
              apk add --no-cache curl sed && \
              sleep 60s && \
              response=$(curl -s -X POST "http://dremio:9047/apiv2/login" \
                --header "Content-Type: application/json" \
                --data-raw "{
                \"userName\": \"admin\",
                \"password\": \"Pa22word\"
                }") && \
              echo $response && \
              token=$(echo "$response" | sed -n 's/.*\"token\":\"\([^\"]*\)\".*/\1/p') && \
              echo $token && \
              # Add Nessie catalog source
              response=$(curl -X POST "http://dremio:9047/api/v3/catalog" \
                --header "Authorization: Bearer $token" \
                --header "Content-Type: application/json" \
                --data-raw "{
                    \"entityType\": \"source\",
                    \"config\": {
                        \"nessieEndpoint\": \"http://nessie:19120/api/v2\",
                        \"nessieAuthType\": \"NONE\",
                        \"asyncEnabled\": true,
                        \"isCachingEnabled\": true,
                        \"maxCacheSpacePct\": 100,
                        \"credentialType\": \"ACCESS_KEY\",
                        \"awsAccessKey\": \"minio-admin\",
                        \"awsAccessSecret\": \"Pa22word22\",
                        \"awsRootPath\": \"/warehouse\",
                        \"propertyList\": [
                            {\"name\": \"fs.s3a.path.style.access\", \"value\": \"true\"},
                            {\"name\": \"fs.s3a.endpoint\", \"value\": \"dremio-minio:9000\"},
                            {\"name\": \"dremio.s3.compat\", \"value\": \"true\"}
                        ],
                        \"secure\": false
                    },
                    \"name\": \"nessie\",
                    \"type\": \"NESSIE\"
                }") && \
              echo $response && \
              # Add S3-compatible storage source (MinIO)
              response=$(curl -X POST "http://dremio:9047/api/v3/source" \
                --header "Authorization: Bearer $token" \
                --header "Content-Type: application/json" \
                --data-raw "{
                    \"entityType\": \"source\",
                    \"name\": \"upload-bucket\",
                    \"type\": \"S3\",
                    \"config\": {
                        \"accessKey\": \"minio-admin\",
                        \"accessSecret\": \"Pa22word22\",
                        \"rootPath\": \"/upload\",
                        \"secure\": false,
                        \"compatibilityMode\": true,
                        \"propertyList\": [
                            {\"name\": \"fs.s3a.endpoint\", \"value\": \"dremio-minio:9000\"},
                            {\"name\": \"fs.s3a.path.style.access\", \"value\": \"true\"}
                        ]
                    }
                }") && \
              echo $response && \
              # Create Bronze, Silver, and Gold spaces
              for space in bronze silver gold; do \
                response=$(curl -X POST "http://dremio:9047/api/v3/catalog" \
                  --header "Authorization: Bearer $token" \
                  --header "Content-Type: application/json" \
                  --data-raw "{
                      \"entityType\": \"space\",
                      \"name\": \"$space\"
                  }") && \
                echo $response; \
              done
      restartPolicy: OnFailure
